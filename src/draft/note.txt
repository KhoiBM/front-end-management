    
       try {
            const response = await (await Services.getAllCategory()).data
            // console.log("response: " + JSON.stringify(response))
            if (response && response != null) {
                if (response.result == config.useResultStatus.SUCCESS) {

                    // toast.success("Thành công")
                } else {
                    toast.error(config.useMessage.resultFailure)
                }
            } else {
                throw new Error("Response is null or undefined")
            }

        } catch (err) {
            toast.error(`${config.useMessage.fetchApiFailure} + ${err}`)
        }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
                                {/* <div>
                                    <FormControlLabel
                                        label="Trạng thái:"
                                        labelPlacement="start"
                                        control={<Switch
                                            color="primary"
                                            checked={formData.isActive}
                                            onChange={handleInputChange}
                                            name="isActive"
                                        />}
                                    />
                                    <FormHelperText>{helperValid.isActive}</FormHelperText>
                                </div> */}

    
    
    
    
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    npm install -D babel-loader @babel/core @babel/preset-env webpack


    //tat cors

     open -na Google\ Chrome --args --user-data-dir=/tmp/temporary-chrome-profile-dir --disable-web-security --disable-site-isolation-trials




//draft
// "@environments/*": ["./src/environments/*"],
// "@services/*": ["./src/app/services/*"]
// ,
//   "editor.codeActionsOnSave": {
//     "source.fixAll": true,
//     "source.organizeImports": true,
//     "addMissingImports": true
//   },
//   "javascript.updateImportsOnFileMove.enabled": "prompt",


 "@modules": "./src/app/modules",
                    "@services": "./src/app/services",
                    "@store": "./src/app/store",
                    "@store/*": "./src/app/store/*",
                    "@extras/*": "./src/app/extras/*",
                    "@view-models": "./src/app/view-models",
                    "@app/*": "./src/app/*"




                        "axios": "^0.21.1",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-icons": "^4.2.0",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.3",
    "redux": "^4.0.5",
    "web-vitals": "^1.0.1"


    